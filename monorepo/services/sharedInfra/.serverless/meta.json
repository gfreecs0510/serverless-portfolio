{
  "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/sharedInfra": {
    "versionSfCore": null,
    "versionFramework": "4.4.11",
    "isWithinCompose": true,
    "isCompose": false,
    "composeOrgName": "gfreecs0510",
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "sharedInfra",
            "plugins": [
              "serverless-plugin-utils"
            ],
            "custom": {
              "esbuild": {
                "sourcemap": true
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "us-east-1",
              "versionFunctions": false,
              "tracing": {
                "apiGateway": true,
                "lambda": true
              },
              "environment": {
                "ENV": "dev",
                "SERVICE_NAME": "sharedInfra",
                "NODE_OPTIONS": "--enable-source-maps",
                "AWS_ACCESS_KEY_ID": "<REDACTED>",
                "AWS_SECRET_ACCESS_KEY": "<REDACTED>",
                "AWS_DEFAULT_REGION": "us-east-1",
                "AWS_REGION": "us-east-1"
              },
              "vpc": {
                "securityGroupIds": [
                  {
                    "Ref": "LambdaSecurityGroup"
                  }
                ],
                "subnetIds": [
                  {
                    "Ref": "PrivateSubnet1"
                  }
                ]
              },
              "stage": "dev",
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessVPC": {
                    "Type": "AWS::EC2::VPC",
                    "Properties": {
                      "CidrBlock": "10.0.0.0/16",
                      "EnableDnsSupport": "true",
                      "EnableDnsHostnames": "true",
                      "Tags": [
                        {
                          "Key": "Name",
                          "Value": "ServerlessVPC"
                        }
                      ]
                    }
                  },
                  "PrivateSubnet1": {
                    "Type": "AWS::EC2::Subnet",
                    "Properties": {
                      "AvailabilityZone": "us-east-1a",
                      "CidrBlock": "10.0.2.0/24",
                      "VpcId": {
                        "Ref": "ServerlessVPC"
                      },
                      "Tags": [
                        {
                          "Key": "Name",
                          "Value": "PrivateSubnet1"
                        }
                      ]
                    }
                  },
                  "LambdaSecurityGroup": {
                    "Type": "AWS::EC2::SecurityGroup",
                    "Properties": {
                      "GroupDescription": "Allow Lambda access to ElastiCache",
                      "VpcId": {
                        "Ref": "ServerlessVPC"
                      },
                      "SecurityGroupIngress": [
                        {
                          "IpProtocol": "tcp",
                          "FromPort": "6379",
                          "ToPort": "6379",
                          "CidrIp": "10.0.0.0/16"
                        }
                      ]
                    }
                  },
                  "SharedCacheSubnetGroup": {
                    "Type": "AWS::ElastiCache::SubnetGroup",
                    "Properties": {
                      "Description": "Subnet group for ElastiCache",
                      "SubnetIds": [
                        {
                          "Ref": "PrivateSubnet1"
                        }
                      ]
                    }
                  },
                  "SharedElasticCacheCluster": {
                    "Type": "AWS::ElastiCache::CacheCluster",
                    "Properties": {
                      "ClusterName": "shared-redis-cluster",
                      "Engine": "redis",
                      "CacheNodeType": "cache.t3.micro",
                      "NumCacheNodes": 1,
                      "VpcSecurityGroupIds": [
                        {
                          "Ref": "LambdaSecurityGroup"
                        }
                      ],
                      "AutoMinorVersionUpgrade": true,
                      "CacheSubnetGroupName": {
                        "Ref": "SharedCacheSubnetGroup"
                      }
                    }
                  },
                  "SharedDynamoDB": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "Serverless",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                      }
                    }
                  },
                  "SharedApiGateway": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "SharedApiGateway",
                      "ProtocolType": "HTTP",
                      "CorsConfiguration": {
                        "AllowMethods": [
                          "*"
                        ],
                        "AllowHeaders": [
                          "*"
                        ],
                        "AllowOrigins": [
                          "*"
                        ]
                      }
                    }
                  },
                  "ApiGatewayStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "SharedApiGateway"
                      },
                      "StageName": "dev",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "ThrottlingRateLimit": 20,
                        "ThrottlingBurstLimit": 30
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                    "Export": {
                      "Name": "sls-sharedInfra-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "SharedApiGatewayId": {
                    "Description": "API Gateway Id",
                    "Value": {
                      "Ref": "SharedApiGateway"
                    }
                  },
                  "SharedDynamoDBArn": {
                    "Description": "DynamoDB arn",
                    "Value": {
                      "Fn::GetAtt": [
                        "SharedDynamoDB",
                        "Arn"
                      ]
                    }
                  },
                  "SharedDynamoDBTableName": {
                    "Description": "The DynamoDB table name",
                    "Value": {
                      "Ref": "SharedDynamoDB"
                    }
                  },
                  "SharedElasticCacheClusterAddress": {
                    "Description": "Redis cluster address",
                    "Value": {
                      "Fn::GetAtt": [
                        "SharedElasticCacheCluster",
                        "RedisEndpoint.Address"
                      ]
                    }
                  },
                  "SharedElasticCacheClusterPort": {
                    "Description": "Redis cluster port",
                    "Value": {
                      "Fn::GetAtt": [
                        "SharedElasticCacheCluster",
                        "RedisEndpoint.Port"
                      ]
                    }
                  },
                  "LambdaSecurityGroupId": {
                    "Description": "Lambda Security Group",
                    "Value": {
                      "Ref": "LambdaSecurityGroup"
                    }
                  },
                  "PrivateSubnet1": {
                    "Description": "Private Subnet 1",
                    "Value": {
                      "Ref": "PrivateSubnet1"
                    }
                  },
                  "VPCId": {
                    "Value": {
                      "Ref": "ServerlessVPC"
                    },
                    "Export": {
                      "Name": "sharedInfra-VPCId"
                    }
                  }
                }
              }
            },
            "resources": {
              "Resources": {
                "ServerlessVPC": {
                  "Type": "AWS::EC2::VPC",
                  "Properties": {
                    "CidrBlock": "10.0.0.0/16",
                    "EnableDnsSupport": "true",
                    "EnableDnsHostnames": "true",
                    "Tags": [
                      {
                        "Key": "Name",
                        "Value": "ServerlessVPC"
                      }
                    ]
                  }
                },
                "PrivateSubnet1": {
                  "Type": "AWS::EC2::Subnet",
                  "Properties": {
                    "AvailabilityZone": "us-east-1a",
                    "CidrBlock": "10.0.2.0/24",
                    "VpcId": {
                      "Ref": "ServerlessVPC"
                    },
                    "Tags": [
                      {
                        "Key": "Name",
                        "Value": "PrivateSubnet1"
                      }
                    ]
                  }
                },
                "LambdaSecurityGroup": {
                  "Type": "AWS::EC2::SecurityGroup",
                  "Properties": {
                    "GroupDescription": "Allow Lambda access to ElastiCache",
                    "VpcId": {
                      "Ref": "ServerlessVPC"
                    },
                    "SecurityGroupIngress": [
                      {
                        "IpProtocol": "tcp",
                        "FromPort": "6379",
                        "ToPort": "6379",
                        "CidrIp": "10.0.0.0/16"
                      }
                    ]
                  }
                },
                "SharedCacheSubnetGroup": {
                  "Type": "AWS::ElastiCache::SubnetGroup",
                  "Properties": {
                    "Description": "Subnet group for ElastiCache",
                    "SubnetIds": [
                      {
                        "Ref": "PrivateSubnet1"
                      }
                    ]
                  }
                },
                "SharedElasticCacheCluster": {
                  "Type": "AWS::ElastiCache::CacheCluster",
                  "Properties": {
                    "ClusterName": "shared-redis-cluster",
                    "Engine": "redis",
                    "CacheNodeType": "cache.t3.micro",
                    "NumCacheNodes": 1,
                    "VpcSecurityGroupIds": [
                      {
                        "Ref": "LambdaSecurityGroup"
                      }
                    ],
                    "AutoMinorVersionUpgrade": true,
                    "CacheSubnetGroupName": {
                      "Ref": "SharedCacheSubnetGroup"
                    }
                  }
                },
                "SharedDynamoDB": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "Serverless",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 1,
                      "WriteCapacityUnits": 1
                    }
                  }
                },
                "SharedApiGateway": {
                  "Type": "AWS::ApiGatewayV2::Api",
                  "Properties": {
                    "Name": "SharedApiGateway",
                    "ProtocolType": "HTTP",
                    "CorsConfiguration": {
                      "AllowMethods": [
                        "*"
                      ],
                      "AllowHeaders": [
                        "*"
                      ],
                      "AllowOrigins": [
                        "*"
                      ]
                    }
                  }
                },
                "ApiGatewayStage": {
                  "Type": "AWS::ApiGatewayV2::Stage",
                  "Properties": {
                    "ApiId": {
                      "Ref": "SharedApiGateway"
                    },
                    "StageName": "dev",
                    "AutoDeploy": true,
                    "DefaultRouteSettings": {
                      "ThrottlingRateLimit": 20,
                      "ThrottlingBurstLimit": 30
                    }
                  }
                }
              },
              "Outputs": {
                "SharedApiGatewayId": {
                  "Description": "API Gateway Id",
                  "Value": {
                    "Ref": "SharedApiGateway"
                  }
                },
                "SharedDynamoDBArn": {
                  "Description": "DynamoDB arn",
                  "Value": {
                    "Fn::GetAtt": [
                      "SharedDynamoDB",
                      "Arn"
                    ]
                  }
                },
                "SharedDynamoDBTableName": {
                  "Description": "The DynamoDB table name",
                  "Value": {
                    "Ref": "SharedDynamoDB"
                  }
                },
                "SharedElasticCacheClusterAddress": {
                  "Description": "Redis cluster address",
                  "Value": {
                    "Fn::GetAtt": [
                      "SharedElasticCacheCluster",
                      "RedisEndpoint.Address"
                    ]
                  }
                },
                "SharedElasticCacheClusterPort": {
                  "Description": "Redis cluster port",
                  "Value": {
                    "Fn::GetAtt": [
                      "SharedElasticCacheCluster",
                      "RedisEndpoint.Port"
                    ]
                  }
                },
                "LambdaSecurityGroupId": {
                  "Description": "Lambda Security Group",
                  "Value": {
                    "Ref": "LambdaSecurityGroup"
                  }
                },
                "PrivateSubnet1": {
                  "Description": "Private Subnet 1",
                  "Value": {
                    "Ref": "PrivateSubnet1"
                  }
                },
                "VPCId": {
                  "Value": {
                    "Ref": "ServerlessVPC"
                  },
                  "Export": {
                    "Name": "sharedInfra-VPCId"
                  }
                }
              }
            },
            "org": "gfreecs0510"
          },
          "configFileDirPath": "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/sharedInfra",
          "config": {
            "type": "env"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "composeParams": {},
          "logger": {
            "namespace": "s:core:resolver:env",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "sharedInfra",
            "plugins": [
              "serverless-plugin-utils"
            ],
            "custom": {
              "esbuild": {
                "sourcemap": true
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "us-east-1",
              "versionFunctions": false,
              "tracing": {
                "apiGateway": true,
                "lambda": true
              },
              "environment": {
                "ENV": "dev",
                "SERVICE_NAME": "sharedInfra",
                "NODE_OPTIONS": "--enable-source-maps",
                "AWS_ACCESS_KEY_ID": "<REDACTED>",
                "AWS_SECRET_ACCESS_KEY": "<REDACTED>",
                "AWS_DEFAULT_REGION": "us-east-1",
                "AWS_REGION": "us-east-1"
              },
              "vpc": {
                "securityGroupIds": [
                  {
                    "Ref": "LambdaSecurityGroup"
                  }
                ],
                "subnetIds": [
                  {
                    "Ref": "PrivateSubnet1"
                  }
                ]
              },
              "stage": "dev",
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessVPC": {
                    "Type": "AWS::EC2::VPC",
                    "Properties": {
                      "CidrBlock": "10.0.0.0/16",
                      "EnableDnsSupport": "true",
                      "EnableDnsHostnames": "true",
                      "Tags": [
                        {
                          "Key": "Name",
                          "Value": "ServerlessVPC"
                        }
                      ]
                    }
                  },
                  "PrivateSubnet1": {
                    "Type": "AWS::EC2::Subnet",
                    "Properties": {
                      "AvailabilityZone": "us-east-1a",
                      "CidrBlock": "10.0.2.0/24",
                      "VpcId": {
                        "Ref": "ServerlessVPC"
                      },
                      "Tags": [
                        {
                          "Key": "Name",
                          "Value": "PrivateSubnet1"
                        }
                      ]
                    }
                  },
                  "LambdaSecurityGroup": {
                    "Type": "AWS::EC2::SecurityGroup",
                    "Properties": {
                      "GroupDescription": "Allow Lambda access to ElastiCache",
                      "VpcId": {
                        "Ref": "ServerlessVPC"
                      },
                      "SecurityGroupIngress": [
                        {
                          "IpProtocol": "tcp",
                          "FromPort": "6379",
                          "ToPort": "6379",
                          "CidrIp": "10.0.0.0/16"
                        }
                      ]
                    }
                  },
                  "SharedCacheSubnetGroup": {
                    "Type": "AWS::ElastiCache::SubnetGroup",
                    "Properties": {
                      "Description": "Subnet group for ElastiCache",
                      "SubnetIds": [
                        {
                          "Ref": "PrivateSubnet1"
                        }
                      ]
                    }
                  },
                  "SharedElasticCacheCluster": {
                    "Type": "AWS::ElastiCache::CacheCluster",
                    "Properties": {
                      "ClusterName": "shared-redis-cluster",
                      "Engine": "redis",
                      "CacheNodeType": "cache.t3.micro",
                      "NumCacheNodes": 1,
                      "VpcSecurityGroupIds": [
                        {
                          "Ref": "LambdaSecurityGroup"
                        }
                      ],
                      "AutoMinorVersionUpgrade": true,
                      "CacheSubnetGroupName": {
                        "Ref": "SharedCacheSubnetGroup"
                      }
                    }
                  },
                  "SharedDynamoDB": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "Serverless",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                      }
                    }
                  },
                  "SharedApiGateway": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "SharedApiGateway",
                      "ProtocolType": "HTTP",
                      "CorsConfiguration": {
                        "AllowMethods": [
                          "*"
                        ],
                        "AllowHeaders": [
                          "*"
                        ],
                        "AllowOrigins": [
                          "*"
                        ]
                      }
                    }
                  },
                  "ApiGatewayStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "SharedApiGateway"
                      },
                      "StageName": "dev",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "ThrottlingRateLimit": 20,
                        "ThrottlingBurstLimit": 30
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                    "Export": {
                      "Name": "sls-sharedInfra-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "SharedApiGatewayId": {
                    "Description": "API Gateway Id",
                    "Value": {
                      "Ref": "SharedApiGateway"
                    }
                  },
                  "SharedDynamoDBArn": {
                    "Description": "DynamoDB arn",
                    "Value": {
                      "Fn::GetAtt": [
                        "SharedDynamoDB",
                        "Arn"
                      ]
                    }
                  },
                  "SharedDynamoDBTableName": {
                    "Description": "The DynamoDB table name",
                    "Value": {
                      "Ref": "SharedDynamoDB"
                    }
                  },
                  "SharedElasticCacheClusterAddress": {
                    "Description": "Redis cluster address",
                    "Value": {
                      "Fn::GetAtt": [
                        "SharedElasticCacheCluster",
                        "RedisEndpoint.Address"
                      ]
                    }
                  },
                  "SharedElasticCacheClusterPort": {
                    "Description": "Redis cluster port",
                    "Value": {
                      "Fn::GetAtt": [
                        "SharedElasticCacheCluster",
                        "RedisEndpoint.Port"
                      ]
                    }
                  },
                  "LambdaSecurityGroupId": {
                    "Description": "Lambda Security Group",
                    "Value": {
                      "Ref": "LambdaSecurityGroup"
                    }
                  },
                  "PrivateSubnet1": {
                    "Description": "Private Subnet 1",
                    "Value": {
                      "Ref": "PrivateSubnet1"
                    }
                  },
                  "VPCId": {
                    "Value": {
                      "Ref": "ServerlessVPC"
                    },
                    "Export": {
                      "Name": "sharedInfra-VPCId"
                    }
                  }
                }
              }
            },
            "resources": {
              "Resources": {
                "ServerlessVPC": {
                  "Type": "AWS::EC2::VPC",
                  "Properties": {
                    "CidrBlock": "10.0.0.0/16",
                    "EnableDnsSupport": "true",
                    "EnableDnsHostnames": "true",
                    "Tags": [
                      {
                        "Key": "Name",
                        "Value": "ServerlessVPC"
                      }
                    ]
                  }
                },
                "PrivateSubnet1": {
                  "Type": "AWS::EC2::Subnet",
                  "Properties": {
                    "AvailabilityZone": "us-east-1a",
                    "CidrBlock": "10.0.2.0/24",
                    "VpcId": {
                      "Ref": "ServerlessVPC"
                    },
                    "Tags": [
                      {
                        "Key": "Name",
                        "Value": "PrivateSubnet1"
                      }
                    ]
                  }
                },
                "LambdaSecurityGroup": {
                  "Type": "AWS::EC2::SecurityGroup",
                  "Properties": {
                    "GroupDescription": "Allow Lambda access to ElastiCache",
                    "VpcId": {
                      "Ref": "ServerlessVPC"
                    },
                    "SecurityGroupIngress": [
                      {
                        "IpProtocol": "tcp",
                        "FromPort": "6379",
                        "ToPort": "6379",
                        "CidrIp": "10.0.0.0/16"
                      }
                    ]
                  }
                },
                "SharedCacheSubnetGroup": {
                  "Type": "AWS::ElastiCache::SubnetGroup",
                  "Properties": {
                    "Description": "Subnet group for ElastiCache",
                    "SubnetIds": [
                      {
                        "Ref": "PrivateSubnet1"
                      }
                    ]
                  }
                },
                "SharedElasticCacheCluster": {
                  "Type": "AWS::ElastiCache::CacheCluster",
                  "Properties": {
                    "ClusterName": "shared-redis-cluster",
                    "Engine": "redis",
                    "CacheNodeType": "cache.t3.micro",
                    "NumCacheNodes": 1,
                    "VpcSecurityGroupIds": [
                      {
                        "Ref": "LambdaSecurityGroup"
                      }
                    ],
                    "AutoMinorVersionUpgrade": true,
                    "CacheSubnetGroupName": {
                      "Ref": "SharedCacheSubnetGroup"
                    }
                  }
                },
                "SharedDynamoDB": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "Serverless",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 1,
                      "WriteCapacityUnits": 1
                    }
                  }
                },
                "SharedApiGateway": {
                  "Type": "AWS::ApiGatewayV2::Api",
                  "Properties": {
                    "Name": "SharedApiGateway",
                    "ProtocolType": "HTTP",
                    "CorsConfiguration": {
                      "AllowMethods": [
                        "*"
                      ],
                      "AllowHeaders": [
                        "*"
                      ],
                      "AllowOrigins": [
                        "*"
                      ]
                    }
                  }
                },
                "ApiGatewayStage": {
                  "Type": "AWS::ApiGatewayV2::Stage",
                  "Properties": {
                    "ApiId": {
                      "Ref": "SharedApiGateway"
                    },
                    "StageName": "dev",
                    "AutoDeploy": true,
                    "DefaultRouteSettings": {
                      "ThrottlingRateLimit": 20,
                      "ThrottlingBurstLimit": 30
                    }
                  }
                }
              },
              "Outputs": {
                "SharedApiGatewayId": {
                  "Description": "API Gateway Id",
                  "Value": {
                    "Ref": "SharedApiGateway"
                  }
                },
                "SharedDynamoDBArn": {
                  "Description": "DynamoDB arn",
                  "Value": {
                    "Fn::GetAtt": [
                      "SharedDynamoDB",
                      "Arn"
                    ]
                  }
                },
                "SharedDynamoDBTableName": {
                  "Description": "The DynamoDB table name",
                  "Value": {
                    "Ref": "SharedDynamoDB"
                  }
                },
                "SharedElasticCacheClusterAddress": {
                  "Description": "Redis cluster address",
                  "Value": {
                    "Fn::GetAtt": [
                      "SharedElasticCacheCluster",
                      "RedisEndpoint.Address"
                    ]
                  }
                },
                "SharedElasticCacheClusterPort": {
                  "Description": "Redis cluster port",
                  "Value": {
                    "Fn::GetAtt": [
                      "SharedElasticCacheCluster",
                      "RedisEndpoint.Port"
                    ]
                  }
                },
                "LambdaSecurityGroupId": {
                  "Description": "Lambda Security Group",
                  "Value": {
                    "Ref": "LambdaSecurityGroup"
                  }
                },
                "PrivateSubnet1": {
                  "Description": "Private Subnet 1",
                  "Value": {
                    "Ref": "PrivateSubnet1"
                  }
                },
                "VPCId": {
                  "Value": {
                    "Ref": "ServerlessVPC"
                  },
                  "Export": {
                    "Name": "sharedInfra-VPCId"
                  }
                }
              }
            },
            "org": "gfreecs0510"
          },
          "configFileDirPath": "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/sharedInfra",
          "config": {
            "type": "self"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "dashboard": null,
          "composeParams": {},
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "sharedInfra",
            "plugins": [
              "serverless-plugin-utils"
            ],
            "custom": {
              "esbuild": {
                "sourcemap": true
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "us-east-1",
              "versionFunctions": false,
              "tracing": {
                "apiGateway": true,
                "lambda": true
              },
              "environment": {
                "ENV": "dev",
                "SERVICE_NAME": "sharedInfra",
                "NODE_OPTIONS": "--enable-source-maps",
                "AWS_ACCESS_KEY_ID": "<REDACTED>",
                "AWS_SECRET_ACCESS_KEY": "<REDACTED>",
                "AWS_DEFAULT_REGION": "us-east-1",
                "AWS_REGION": "us-east-1"
              },
              "vpc": {
                "securityGroupIds": [
                  {
                    "Ref": "LambdaSecurityGroup"
                  }
                ],
                "subnetIds": [
                  {
                    "Ref": "PrivateSubnet1"
                  }
                ]
              },
              "stage": "dev",
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessVPC": {
                    "Type": "AWS::EC2::VPC",
                    "Properties": {
                      "CidrBlock": "10.0.0.0/16",
                      "EnableDnsSupport": "true",
                      "EnableDnsHostnames": "true",
                      "Tags": [
                        {
                          "Key": "Name",
                          "Value": "ServerlessVPC"
                        }
                      ]
                    }
                  },
                  "PrivateSubnet1": {
                    "Type": "AWS::EC2::Subnet",
                    "Properties": {
                      "AvailabilityZone": "us-east-1a",
                      "CidrBlock": "10.0.2.0/24",
                      "VpcId": {
                        "Ref": "ServerlessVPC"
                      },
                      "Tags": [
                        {
                          "Key": "Name",
                          "Value": "PrivateSubnet1"
                        }
                      ]
                    }
                  },
                  "LambdaSecurityGroup": {
                    "Type": "AWS::EC2::SecurityGroup",
                    "Properties": {
                      "GroupDescription": "Allow Lambda access to ElastiCache",
                      "VpcId": {
                        "Ref": "ServerlessVPC"
                      },
                      "SecurityGroupIngress": [
                        {
                          "IpProtocol": "tcp",
                          "FromPort": "6379",
                          "ToPort": "6379",
                          "CidrIp": "10.0.0.0/16"
                        }
                      ]
                    }
                  },
                  "SharedCacheSubnetGroup": {
                    "Type": "AWS::ElastiCache::SubnetGroup",
                    "Properties": {
                      "Description": "Subnet group for ElastiCache",
                      "SubnetIds": [
                        {
                          "Ref": "PrivateSubnet1"
                        }
                      ]
                    }
                  },
                  "SharedElasticCacheCluster": {
                    "Type": "AWS::ElastiCache::CacheCluster",
                    "Properties": {
                      "ClusterName": "shared-redis-cluster",
                      "Engine": "redis",
                      "CacheNodeType": "cache.t3.micro",
                      "NumCacheNodes": 1,
                      "VpcSecurityGroupIds": [
                        {
                          "Ref": "LambdaSecurityGroup"
                        }
                      ],
                      "AutoMinorVersionUpgrade": true,
                      "CacheSubnetGroupName": {
                        "Ref": "SharedCacheSubnetGroup"
                      }
                    }
                  },
                  "SharedDynamoDB": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "Serverless",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                      }
                    }
                  },
                  "SharedApiGateway": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "SharedApiGateway",
                      "ProtocolType": "HTTP",
                      "CorsConfiguration": {
                        "AllowMethods": [
                          "*"
                        ],
                        "AllowHeaders": [
                          "*"
                        ],
                        "AllowOrigins": [
                          "*"
                        ]
                      }
                    }
                  },
                  "ApiGatewayStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "SharedApiGateway"
                      },
                      "StageName": "dev",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "ThrottlingRateLimit": 20,
                        "ThrottlingBurstLimit": 30
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                    "Export": {
                      "Name": "sls-sharedInfra-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "SharedApiGatewayId": {
                    "Description": "API Gateway Id",
                    "Value": {
                      "Ref": "SharedApiGateway"
                    }
                  },
                  "SharedDynamoDBArn": {
                    "Description": "DynamoDB arn",
                    "Value": {
                      "Fn::GetAtt": [
                        "SharedDynamoDB",
                        "Arn"
                      ]
                    }
                  },
                  "SharedDynamoDBTableName": {
                    "Description": "The DynamoDB table name",
                    "Value": {
                      "Ref": "SharedDynamoDB"
                    }
                  },
                  "SharedElasticCacheClusterAddress": {
                    "Description": "Redis cluster address",
                    "Value": {
                      "Fn::GetAtt": [
                        "SharedElasticCacheCluster",
                        "RedisEndpoint.Address"
                      ]
                    }
                  },
                  "SharedElasticCacheClusterPort": {
                    "Description": "Redis cluster port",
                    "Value": {
                      "Fn::GetAtt": [
                        "SharedElasticCacheCluster",
                        "RedisEndpoint.Port"
                      ]
                    }
                  },
                  "LambdaSecurityGroupId": {
                    "Description": "Lambda Security Group",
                    "Value": {
                      "Ref": "LambdaSecurityGroup"
                    }
                  },
                  "PrivateSubnet1": {
                    "Description": "Private Subnet 1",
                    "Value": {
                      "Ref": "PrivateSubnet1"
                    }
                  },
                  "VPCId": {
                    "Value": {
                      "Ref": "ServerlessVPC"
                    },
                    "Export": {
                      "Name": "sharedInfra-VPCId"
                    }
                  }
                }
              }
            },
            "resources": {
              "Resources": {
                "ServerlessVPC": {
                  "Type": "AWS::EC2::VPC",
                  "Properties": {
                    "CidrBlock": "10.0.0.0/16",
                    "EnableDnsSupport": "true",
                    "EnableDnsHostnames": "true",
                    "Tags": [
                      {
                        "Key": "Name",
                        "Value": "ServerlessVPC"
                      }
                    ]
                  }
                },
                "PrivateSubnet1": {
                  "Type": "AWS::EC2::Subnet",
                  "Properties": {
                    "AvailabilityZone": "us-east-1a",
                    "CidrBlock": "10.0.2.0/24",
                    "VpcId": {
                      "Ref": "ServerlessVPC"
                    },
                    "Tags": [
                      {
                        "Key": "Name",
                        "Value": "PrivateSubnet1"
                      }
                    ]
                  }
                },
                "LambdaSecurityGroup": {
                  "Type": "AWS::EC2::SecurityGroup",
                  "Properties": {
                    "GroupDescription": "Allow Lambda access to ElastiCache",
                    "VpcId": {
                      "Ref": "ServerlessVPC"
                    },
                    "SecurityGroupIngress": [
                      {
                        "IpProtocol": "tcp",
                        "FromPort": "6379",
                        "ToPort": "6379",
                        "CidrIp": "10.0.0.0/16"
                      }
                    ]
                  }
                },
                "SharedCacheSubnetGroup": {
                  "Type": "AWS::ElastiCache::SubnetGroup",
                  "Properties": {
                    "Description": "Subnet group for ElastiCache",
                    "SubnetIds": [
                      {
                        "Ref": "PrivateSubnet1"
                      }
                    ]
                  }
                },
                "SharedElasticCacheCluster": {
                  "Type": "AWS::ElastiCache::CacheCluster",
                  "Properties": {
                    "ClusterName": "shared-redis-cluster",
                    "Engine": "redis",
                    "CacheNodeType": "cache.t3.micro",
                    "NumCacheNodes": 1,
                    "VpcSecurityGroupIds": [
                      {
                        "Ref": "LambdaSecurityGroup"
                      }
                    ],
                    "AutoMinorVersionUpgrade": true,
                    "CacheSubnetGroupName": {
                      "Ref": "SharedCacheSubnetGroup"
                    }
                  }
                },
                "SharedDynamoDB": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "Serverless",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 1,
                      "WriteCapacityUnits": 1
                    }
                  }
                },
                "SharedApiGateway": {
                  "Type": "AWS::ApiGatewayV2::Api",
                  "Properties": {
                    "Name": "SharedApiGateway",
                    "ProtocolType": "HTTP",
                    "CorsConfiguration": {
                      "AllowMethods": [
                        "*"
                      ],
                      "AllowHeaders": [
                        "*"
                      ],
                      "AllowOrigins": [
                        "*"
                      ]
                    }
                  }
                },
                "ApiGatewayStage": {
                  "Type": "AWS::ApiGatewayV2::Stage",
                  "Properties": {
                    "ApiId": {
                      "Ref": "SharedApiGateway"
                    },
                    "StageName": "dev",
                    "AutoDeploy": true,
                    "DefaultRouteSettings": {
                      "ThrottlingRateLimit": 20,
                      "ThrottlingBurstLimit": 30
                    }
                  }
                }
              },
              "Outputs": {
                "SharedApiGatewayId": {
                  "Description": "API Gateway Id",
                  "Value": {
                    "Ref": "SharedApiGateway"
                  }
                },
                "SharedDynamoDBArn": {
                  "Description": "DynamoDB arn",
                  "Value": {
                    "Fn::GetAtt": [
                      "SharedDynamoDB",
                      "Arn"
                    ]
                  }
                },
                "SharedDynamoDBTableName": {
                  "Description": "The DynamoDB table name",
                  "Value": {
                    "Ref": "SharedDynamoDB"
                  }
                },
                "SharedElasticCacheClusterAddress": {
                  "Description": "Redis cluster address",
                  "Value": {
                    "Fn::GetAtt": [
                      "SharedElasticCacheCluster",
                      "RedisEndpoint.Address"
                    ]
                  }
                },
                "SharedElasticCacheClusterPort": {
                  "Description": "Redis cluster port",
                  "Value": {
                    "Fn::GetAtt": [
                      "SharedElasticCacheCluster",
                      "RedisEndpoint.Port"
                    ]
                  }
                },
                "LambdaSecurityGroupId": {
                  "Description": "Lambda Security Group",
                  "Value": {
                    "Ref": "LambdaSecurityGroup"
                  }
                },
                "PrivateSubnet1": {
                  "Description": "Private Subnet 1",
                  "Value": {
                    "Ref": "PrivateSubnet1"
                  }
                },
                "VPCId": {
                  "Value": {
                    "Ref": "ServerlessVPC"
                  },
                  "Export": {
                    "Name": "sharedInfra-VPCId"
                  }
                }
              }
            },
            "org": "gfreecs0510"
          },
          "configFileDirPath": "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/sharedInfra",
          "config": {
            "type": "sls"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "dashboard": null,
          "composeParams": {},
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": "sharedInfra",
    "composeServiceParams": {},
    "servicePath": "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/sharedInfra",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "sharedInfra",
      "plugins": [
        "serverless-plugin-utils"
      ],
      "custom": {
        "esbuild": {
          "sourcemap": true
        }
      },
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "versionFunctions": false,
        "tracing": {
          "apiGateway": true,
          "lambda": true
        },
        "environment": {
          "ENV": "dev",
          "SERVICE_NAME": "sharedInfra",
          "NODE_OPTIONS": "--enable-source-maps",
          "AWS_ACCESS_KEY_ID": "<REDACTED>",
          "AWS_SECRET_ACCESS_KEY": "<REDACTED>",
          "AWS_DEFAULT_REGION": "us-east-1",
          "AWS_REGION": "us-east-1"
        },
        "vpc": {
          "securityGroupIds": [
            {
              "Ref": "LambdaSecurityGroup"
            }
          ],
          "subnetIds": [
            {
              "Ref": "PrivateSubnet1"
            }
          ]
        },
        "stage": "dev",
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessVPC": {
              "Type": "AWS::EC2::VPC",
              "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "ServerlessVPC"
                  }
                ]
              }
            },
            "PrivateSubnet1": {
              "Type": "AWS::EC2::Subnet",
              "Properties": {
                "AvailabilityZone": "us-east-1a",
                "CidrBlock": "10.0.2.0/24",
                "VpcId": {
                  "Ref": "ServerlessVPC"
                },
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "PrivateSubnet1"
                  }
                ]
              }
            },
            "LambdaSecurityGroup": {
              "Type": "AWS::EC2::SecurityGroup",
              "Properties": {
                "GroupDescription": "Allow Lambda access to ElastiCache",
                "VpcId": {
                  "Ref": "ServerlessVPC"
                },
                "SecurityGroupIngress": [
                  {
                    "IpProtocol": "tcp",
                    "FromPort": "6379",
                    "ToPort": "6379",
                    "CidrIp": "10.0.0.0/16"
                  }
                ]
              }
            },
            "SharedCacheSubnetGroup": {
              "Type": "AWS::ElastiCache::SubnetGroup",
              "Properties": {
                "Description": "Subnet group for ElastiCache",
                "SubnetIds": [
                  {
                    "Ref": "PrivateSubnet1"
                  }
                ]
              }
            },
            "SharedElasticCacheCluster": {
              "Type": "AWS::ElastiCache::CacheCluster",
              "Properties": {
                "ClusterName": "shared-redis-cluster",
                "Engine": "redis",
                "CacheNodeType": "cache.t3.micro",
                "NumCacheNodes": 1,
                "VpcSecurityGroupIds": [
                  {
                    "Ref": "LambdaSecurityGroup"
                  }
                ],
                "AutoMinorVersionUpgrade": true,
                "CacheSubnetGroupName": {
                  "Ref": "SharedCacheSubnetGroup"
                }
              }
            },
            "SharedDynamoDB": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "Serverless",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": 1,
                  "WriteCapacityUnits": 1
                }
              }
            },
            "SharedApiGateway": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "SharedApiGateway",
                "ProtocolType": "HTTP",
                "CorsConfiguration": {
                  "AllowMethods": [
                    "*"
                  ],
                  "AllowHeaders": [
                    "*"
                  ],
                  "AllowOrigins": [
                    "*"
                  ]
                }
              }
            },
            "ApiGatewayStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "SharedApiGateway"
                },
                "StageName": "dev",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "ThrottlingRateLimit": 20,
                  "ThrottlingBurstLimit": 30
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
              "Export": {
                "Name": "sls-sharedInfra-dev-ServerlessDeploymentBucketName"
              }
            },
            "SharedApiGatewayId": {
              "Description": "API Gateway Id",
              "Value": {
                "Ref": "SharedApiGateway"
              }
            },
            "SharedDynamoDBArn": {
              "Description": "DynamoDB arn",
              "Value": {
                "Fn::GetAtt": [
                  "SharedDynamoDB",
                  "Arn"
                ]
              }
            },
            "SharedDynamoDBTableName": {
              "Description": "The DynamoDB table name",
              "Value": {
                "Ref": "SharedDynamoDB"
              }
            },
            "SharedElasticCacheClusterAddress": {
              "Description": "Redis cluster address",
              "Value": {
                "Fn::GetAtt": [
                  "SharedElasticCacheCluster",
                  "RedisEndpoint.Address"
                ]
              }
            },
            "SharedElasticCacheClusterPort": {
              "Description": "Redis cluster port",
              "Value": {
                "Fn::GetAtt": [
                  "SharedElasticCacheCluster",
                  "RedisEndpoint.Port"
                ]
              }
            },
            "LambdaSecurityGroupId": {
              "Description": "Lambda Security Group",
              "Value": {
                "Ref": "LambdaSecurityGroup"
              }
            },
            "PrivateSubnet1": {
              "Description": "Private Subnet 1",
              "Value": {
                "Ref": "PrivateSubnet1"
              }
            },
            "VPCId": {
              "Value": {
                "Ref": "ServerlessVPC"
              },
              "Export": {
                "Name": "sharedInfra-VPCId"
              }
            }
          }
        }
      },
      "resources": {
        "Resources": {
          "ServerlessVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "CidrBlock": "10.0.0.0/16",
              "EnableDnsSupport": "true",
              "EnableDnsHostnames": "true",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "ServerlessVPC"
                }
              ]
            }
          },
          "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "AvailabilityZone": "us-east-1a",
              "CidrBlock": "10.0.2.0/24",
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "PrivateSubnet1"
                }
              ]
            }
          },
          "LambdaSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupDescription": "Allow Lambda access to ElastiCache",
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "SecurityGroupIngress": [
                {
                  "IpProtocol": "tcp",
                  "FromPort": "6379",
                  "ToPort": "6379",
                  "CidrIp": "10.0.0.0/16"
                }
              ]
            }
          },
          "SharedCacheSubnetGroup": {
            "Type": "AWS::ElastiCache::SubnetGroup",
            "Properties": {
              "Description": "Subnet group for ElastiCache",
              "SubnetIds": [
                {
                  "Ref": "PrivateSubnet1"
                }
              ]
            }
          },
          "SharedElasticCacheCluster": {
            "Type": "AWS::ElastiCache::CacheCluster",
            "Properties": {
              "ClusterName": "shared-redis-cluster",
              "Engine": "redis",
              "CacheNodeType": "cache.t3.micro",
              "NumCacheNodes": 1,
              "VpcSecurityGroupIds": [
                {
                  "Ref": "LambdaSecurityGroup"
                }
              ],
              "AutoMinorVersionUpgrade": true,
              "CacheSubnetGroupName": {
                "Ref": "SharedCacheSubnetGroup"
              }
            }
          },
          "SharedDynamoDB": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Serverless",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "SharedApiGateway": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "SharedApiGateway",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowMethods": [
                  "*"
                ],
                "AllowHeaders": [
                  "*"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "ApiGatewayStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "SharedApiGateway"
              },
              "StageName": "dev",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "ThrottlingRateLimit": 20,
                "ThrottlingBurstLimit": 30
              }
            }
          }
        },
        "Outputs": {
          "SharedApiGatewayId": {
            "Description": "API Gateway Id",
            "Value": {
              "Ref": "SharedApiGateway"
            }
          },
          "SharedDynamoDBArn": {
            "Description": "DynamoDB arn",
            "Value": {
              "Fn::GetAtt": [
                "SharedDynamoDB",
                "Arn"
              ]
            }
          },
          "SharedDynamoDBTableName": {
            "Description": "The DynamoDB table name",
            "Value": {
              "Ref": "SharedDynamoDB"
            }
          },
          "SharedElasticCacheClusterAddress": {
            "Description": "Redis cluster address",
            "Value": {
              "Fn::GetAtt": [
                "SharedElasticCacheCluster",
                "RedisEndpoint.Address"
              ]
            }
          },
          "SharedElasticCacheClusterPort": {
            "Description": "Redis cluster port",
            "Value": {
              "Fn::GetAtt": [
                "SharedElasticCacheCluster",
                "RedisEndpoint.Port"
              ]
            }
          },
          "LambdaSecurityGroupId": {
            "Description": "Lambda Security Group",
            "Value": {
              "Ref": "LambdaSecurityGroup"
            }
          },
          "PrivateSubnet1": {
            "Description": "Private Subnet 1",
            "Value": {
              "Ref": "PrivateSubnet1"
            }
          },
          "VPCId": {
            "Value": {
              "Ref": "ServerlessVPC"
            },
            "Export": {
              "Name": "sharedInfra-VPCId"
            }
          }
        }
      },
      "org": "gfreecs0510"
    },
    "serviceRawFile": "service: sharedInfra\n\nplugins:\n  - serverless-plugin-utils\n\ncustom:\n  esbuild:\n    sourcemap: true\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: ${env:AWS_REGION, 'us-west-2'}\n  versionFunctions: false\n  tracing:\n    apiGateway: true\n    lambda: true\n  environment:\n    ENV: ${env:ENV}\n    SERVICE_NAME: ${self:service}\n    NODE_OPTIONS: --enable-source-maps\n    AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}\n    AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}\n    AWS_DEFAULT_REGION: ${env:AWS_DEFAULT_REGION}\n    AWS_REGION: ${env:AWS_REGION}\n  vpc:\n    securityGroupIds:\n      - !Ref LambdaSecurityGroup\n    subnetIds:\n      - !Ref PrivateSubnet1\n\nresources:\n  Resources:\n    ServerlessVPC:\n      Type: AWS::EC2::VPC\n      Properties:\n        CidrBlock: '10.0.0.0/16'\n        EnableDnsSupport: 'true'\n        EnableDnsHostnames: 'true'\n        Tags:\n          - Key: Name\n            Value: ServerlessVPC\n\n    PrivateSubnet1:\n      Type: AWS::EC2::Subnet\n      Properties:\n        AvailabilityZone: ${env:AWS_AVAILABILITY_ZONE, 'us-east-1a'}\n        CidrBlock: '10.0.2.0/24'\n        VpcId: !Ref ServerlessVPC\n        Tags:\n          - Key: Name\n            Value: PrivateSubnet1\n\n    LambdaSecurityGroup:\n      Type: AWS::EC2::SecurityGroup\n      Properties:\n        GroupDescription: 'Allow Lambda access to ElastiCache'\n        VpcId: !Ref ServerlessVPC\n        SecurityGroupIngress:\n          - IpProtocol: 'tcp'\n            FromPort: ${env:REDIS_PORT, '6379'} # Using environment variable for port\n            ToPort: ${env:REDIS_PORT, '6379'} # Using environment variable for port\n            CidrIp: '10.0.0.0/16'\n\n    SharedCacheSubnetGroup:\n      Type: AWS::ElastiCache::SubnetGroup\n      Properties:\n        Description: 'Subnet group for ElastiCache'\n        SubnetIds:\n          - Ref: PrivateSubnet1\n\n    SharedElasticCacheCluster:\n      Type: AWS::ElastiCache::CacheCluster\n      Properties:\n        ClusterName: shared-redis-cluster\n        Engine: redis\n        CacheNodeType: cache.t3.micro\n        NumCacheNodes: 1\n        VpcSecurityGroupIds:\n          - Ref: LambdaSecurityGroup\n        AutoMinorVersionUpgrade: true\n        CacheSubnetGroupName: !Ref SharedCacheSubnetGroup\n\n    SharedDynamoDB:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: Serverless\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n\n    SharedApiGateway:\n      Type: AWS::ApiGatewayV2::Api\n      Properties:\n        Name: SharedApiGateway\n        ProtocolType: HTTP\n        CorsConfiguration:\n          AllowMethods:\n            - '*'\n          AllowHeaders:\n            - '*'\n          AllowOrigins:\n            - '*'\n\n    ApiGatewayStage:\n      Type: AWS::ApiGatewayV2::Stage\n      Properties:\n        ApiId: !Ref SharedApiGateway\n        StageName: ${sls:stage}\n        AutoDeploy: true\n        DefaultRouteSettings:\n          ThrottlingRateLimit: 20\n          ThrottlingBurstLimit: 30\n\n  Outputs:\n    SharedApiGatewayId:\n      Description: 'API Gateway Id'\n      Value: !Ref SharedApiGateway\n\n    SharedDynamoDBArn:\n      Description: 'DynamoDB arn'\n      Value: !GetAtt SharedDynamoDB.Arn\n\n    SharedDynamoDBTableName:\n      Description: 'The DynamoDB table name'\n      Value: !Ref SharedDynamoDB\n\n    SharedElasticCacheClusterAddress:\n      Description: 'Redis cluster address'\n      Value: !GetAtt SharedElasticCacheCluster.RedisEndpoint.Address\n\n    SharedElasticCacheClusterPort:\n      Description: 'Redis cluster port'\n      Value: !GetAtt SharedElasticCacheCluster.RedisEndpoint.Port\n\n    LambdaSecurityGroupId:\n      Description: 'Lambda Security Group'\n      Value: !Ref LambdaSecurityGroup\n\n    PrivateSubnet1:\n      Description: 'Private Subnet 1'\n      Value: !Ref PrivateSubnet1\n\n    VPCId:\n      Value: !Ref ServerlessVPC\n      Export:\n        Name: ${self:service}-VPCId\n",
    "command": [
      "deploy"
    ],
    "options": {
      "verbose": true
    },
    "error": null,
    "params": {},
    "machineId": "bb12135dd90b8dad2a0f7176b68baeb3",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "ee424e0e-6208-402b-ba5f-a9abe51422a3",
    "orgName": "gfreecs0510",
    "userId": "GRb8YTcYbHkklmCYMt",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "gfreecs0510",
    "subscription": null,
    "userEmail": "gfreecs0510@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "440744220639",
    "projectType": "traditional",
    "versionSf": "4.4.11",
    "serviceProviderAwsCfStackName": "sharedInfra-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:440744220639:stack/sharedInfra-dev/4f4df160-a674-11ef-9919-0e10530f727b",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:440744220639:stack/sharedInfra-dev/4f4df160-a674-11ef-9919-0e10530f727b",
    "serviceProviderAwsCfStackCreated": "2024-11-19T12:46:34.969Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-19T15:25:21.443Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "SharedDynamoDBArn",
        "OutputValue": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
        "Description": "DynamoDB arn"
      },
      {
        "OutputKey": "SharedDynamoDBTableName",
        "OutputValue": "Serverless",
        "Description": "The DynamoDB table name"
      },
      {
        "OutputKey": "PrivateSubnet1",
        "OutputValue": "subnet-06f144f22653ca420",
        "Description": "Private Subnet 1"
      },
      {
        "OutputKey": "SharedElasticCacheClusterPort",
        "OutputValue": "6379",
        "Description": "Redis cluster port"
      },
      {
        "OutputKey": "VPCId",
        "OutputValue": "vpc-00a4e39399092e34b",
        "ExportName": "sharedInfra-VPCId"
      },
      {
        "OutputKey": "SharedElasticCacheClusterAddress",
        "OutputValue": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
        "Description": "Redis cluster address"
      },
      {
        "OutputKey": "SharedApiGatewayId",
        "OutputValue": "feg279u8wc",
        "Description": "API Gateway Id"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-a0eef045-f091",
        "ExportName": "sls-sharedInfra-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "LambdaSecurityGroupId",
        "OutputValue": "sg-086c34a1e163316df",
        "Description": "Lambda Security Group"
      }
    ]
  }
}