{
  "service": {
    "service": "users",
    "serviceObject": {
      "name": "users"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "httpApi": {
        "id": "feg279u8wc"
      },
      "vpc": {
        "securityGroupIds": [
          "sg-086c34a1e163316df"
        ],
        "subnetIds": [
          "subnet-06f144f22653ca420"
        ]
      },
      "environment": {
        "ENV": "dev",
        "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
        "REDIS_PORT": "6379",
        "TABLE_NAME": "Serverless"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ChangePasswordFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/users-dev-changePasswordFunction"
            }
          },
          "LoginFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/users-dev-loginFunction"
            }
          },
          "NoTokenAccessFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/users-dev-noTokenAccessFunction"
            }
          },
          "RegisterFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/users-dev-registerFunction"
            }
          },
          "VerifyTokenFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/users-dev-verifyTokenFunction"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "users",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "users",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "ChangePasswordFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
              },
              "Handler": "src/handlers/changePassword.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "users-dev-changePasswordFunction",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "ENV": "dev",
                  "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                  "REDIS_PORT": "6379",
                  "TABLE_NAME": "Serverless",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "ChangePasswordFunctionIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "ChangePasswordFunctionIamRoleLambdaExecution",
              "ChangePasswordFunctionLogGroup"
            ]
          },
          "LoginFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
              },
              "Handler": "src/handlers/login.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "users-dev-loginFunction",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "ENV": "dev",
                  "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                  "REDIS_PORT": "6379",
                  "TABLE_NAME": "Serverless",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "LoginFunctionIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "LoginFunctionIamRoleLambdaExecution",
              "LoginFunctionLogGroup"
            ]
          },
          "NoTokenAccessFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
              },
              "Handler": "src/handlers/noTokenAccess.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "users-dev-noTokenAccessFunction",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "ENV": "dev",
                  "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                  "REDIS_PORT": "6379",
                  "TABLE_NAME": "Serverless",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "NoTokenAccessFunctionLogGroup"
            ]
          },
          "RegisterFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
              },
              "Handler": "src/handlers/register.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "users-dev-registerFunction",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "ENV": "dev",
                  "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                  "REDIS_PORT": "6379",
                  "TABLE_NAME": "Serverless",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "RegisterFunctionIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "RegisterFunctionIamRoleLambdaExecution",
              "RegisterFunctionLogGroup"
            ]
          },
          "VerifyTokenFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
              },
              "Handler": "src/handlers/verifyToken.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "users-dev-verifyTokenFunction",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "ENV": "dev",
                  "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                  "REDIS_PORT": "6379",
                  "TABLE_NAME": "Serverless",
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "VerifyTokenFunctionLogGroup"
            ]
          },
          "ChangePasswordFunctionLambdaVersion1OnpMpMvVCm0KXw6FSChDIdF12uDd9vkr1beX2dbdk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ChangePasswordFunctionLambdaFunction"
              },
              "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
            }
          },
          "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginFunctionLambdaFunction"
              },
              "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
            }
          },
          "NoTokenAccessFunctionLambdaVersionjlUWVcRwsXMtaGElihEiWpHbInKKaiJGWvudB21RzI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NoTokenAccessFunctionLambdaFunction"
              },
              "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
            }
          },
          "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RegisterFunctionLambdaFunction"
              },
              "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
            }
          },
          "VerifyTokenFunctionLambdaVersionkzIyO9PBK70UpQvZrrYMXjc7bpCEmMrcXjyEDgvUY0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "VerifyTokenFunctionLambdaFunction"
              },
              "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
            }
          },
          "ChangePasswordFunctionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ChangePasswordFunctionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "feg279u8wc",
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationChangePasswordFunction": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": "feg279u8wc",
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ChangePasswordFunctionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePatchUsersChangepassword": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": "feg279u8wc",
              "RouteKey": "PATCH /users/changePassword",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationChangePasswordFunction"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationChangePasswordFunction"
          },
          "LoginFunctionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginFunctionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "feg279u8wc",
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationLoginFunction": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": "feg279u8wc",
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"LoginFunctionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostUsersLogin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": "feg279u8wc",
              "RouteKey": "POST /users/login",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationLoginFunction"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationLoginFunction"
          },
          "NoTokenAccessFunctionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "NoTokenAccessFunctionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "feg279u8wc",
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationNoTokenAccessFunction": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": "feg279u8wc",
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NoTokenAccessFunctionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostUsersNotokenaccess": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": "feg279u8wc",
              "RouteKey": "POST /users/noTokenAccess",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationNoTokenAccessFunction"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationNoTokenAccessFunction"
          },
          "RegisterFunctionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RegisterFunctionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "feg279u8wc",
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRegisterFunction": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": "feg279u8wc",
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RegisterFunctionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostUsersRegister": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": "feg279u8wc",
              "RouteKey": "POST /users/register",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRegisterFunction"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRegisterFunction"
          },
          "VerifyTokenFunctionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "VerifyTokenFunctionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "feg279u8wc",
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationVerifyTokenFunction": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": "feg279u8wc",
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"VerifyTokenFunctionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostUsersVerify": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": "feg279u8wc",
              "RouteKey": "POST /users/verify",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationVerifyTokenFunction"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationVerifyTokenFunction"
          },
          "ChangePasswordFunctionIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "users",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-changePasswordFunction:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                        "Action": [
                          "dynamodb:GetItem",
                          "dynamodb:PutItem",
                          "dynamodb:UpdateItem"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": "changePasswordFunctionRole",
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "LoginFunctionIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "users",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-loginFunction:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                        "Action": [
                          "dynamodb:GetItem"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": "loginFunctionRole",
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "RegisterFunctionIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "users",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-registerFunction:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                        "Action": [
                          "dynamodb:GetItem",
                          "dynamodb:PutItem",
                          "dynamodb:UpdateItem"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": "registerFunctionRole",
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
            "Export": {
              "Name": "sls-users-dev-ServerlessDeploymentBucketName"
            }
          },
          "ChangePasswordFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ChangePasswordFunctionLambdaVersion1OnpMpMvVCm0KXw6FSChDIdF12uDd9vkr1beX2dbdk"
            },
            "Export": {
              "Name": "sls-users-dev-ChangePasswordFunctionLambdaFunctionQualifiedArn"
            }
          },
          "LoginFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
            },
            "Export": {
              "Name": "sls-users-dev-LoginFunctionLambdaFunctionQualifiedArn"
            }
          },
          "NoTokenAccessFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NoTokenAccessFunctionLambdaVersionjlUWVcRwsXMtaGElihEiWpHbInKKaiJGWvudB21RzI"
            },
            "Export": {
              "Name": "sls-users-dev-NoTokenAccessFunctionLambdaFunctionQualifiedArn"
            }
          },
          "RegisterFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
            },
            "Export": {
              "Name": "sls-users-dev-RegisterFunctionLambdaFunctionQualifiedArn"
            }
          },
          "VerifyTokenFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "VerifyTokenFunctionLambdaVersionkzIyO9PBK70UpQvZrrYMXjc7bpCEmMrcXjyEDgvUY0"
            },
            "Export": {
              "Name": "sls-users-dev-VerifyTokenFunctionLambdaFunctionQualifiedArn"
            }
          }
        }
      }
    },
    "custom": {
      "esbuild": {
        "bundle": true,
        "sourcemap": true,
        "minify": true,
        "target": "node18"
      },
      "serverless-iam-roles-per-function": {
        "defaultInherit": true
      }
    },
    "plugins": [
      "serverless-iam-roles-per-function"
    ],
    "pluginsData": {},
    "functions": {
      "changePasswordFunction": {
        "handler": "src/handlers/changePassword.handler",
        "timeout": 30,
        "iamRoleStatementsName": "changePasswordFunctionRole",
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ChangePasswordFunctionIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "events": [
          {
            "httpApi": {
              "path": "/users/changePassword",
              "method": "PATCH"
            },
            "resolvedMethod": "PATCH",
            "resolvedPath": "/users/changePassword"
          }
        ],
        "name": "users-dev-changePasswordFunction",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {},
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ChangePasswordFunctionLambdaVersion1OnpMpMvVCm0KXw6FSChDIdF12uDd9vkr1beX2dbdk"
      },
      "loginFunction": {
        "handler": "src/handlers/login.handler",
        "timeout": 30,
        "iamRoleStatementsName": "loginFunctionRole",
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"LoginFunctionIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "events": [
          {
            "httpApi": {
              "path": "/users/login",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/users/login"
          }
        ],
        "name": "users-dev-loginFunction",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {},
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
      },
      "noTokenAccessFunction": {
        "handler": "src/handlers/noTokenAccess.handler",
        "timeout": 30,
        "events": [
          {
            "httpApi": {
              "path": "/users/noTokenAccess",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/users/noTokenAccess"
          }
        ],
        "name": "users-dev-noTokenAccessFunction",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {},
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "NoTokenAccessFunctionLambdaVersionjlUWVcRwsXMtaGElihEiWpHbInKKaiJGWvudB21RzI"
      },
      "registerFunction": {
        "handler": "src/handlers/register.handler",
        "timeout": 30,
        "iamRoleStatementsName": "registerFunctionRole",
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RegisterFunctionIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "events": [
          {
            "httpApi": {
              "path": "/users/register",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/users/register"
          }
        ],
        "name": "users-dev-registerFunction",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {},
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
      },
      "verifyTokenFunction": {
        "handler": "src/handlers/verifyToken.handler",
        "timeout": 30,
        "events": [
          {
            "httpApi": {
              "path": "/users/verify",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/users/verify"
          }
        ],
        "name": "users-dev-verifyTokenFunction",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {},
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "VerifyTokenFunctionLambdaVersionkzIyO9PBK70UpQvZrrYMXjc7bpCEmMrcXjyEDgvUY0"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "users",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "org": "gfreecs0510"
    },
    "appId": null,
    "org": "gfreecs0510",
    "orgId": null,
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z",
    "artifact": "users.zip"
  }
}