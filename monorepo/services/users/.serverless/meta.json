{
  "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/users": {
    "versionSfCore": null,
    "versionFramework": "4.4.11",
    "isWithinCompose": true,
    "isCompose": false,
    "composeOrgName": "gfreecs0510",
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "users",
            "plugins": [
              "serverless-iam-roles-per-function"
            ],
            "custom": {
              "esbuild": {
                "bundle": true,
                "sourcemap": true,
                "minify": true,
                "target": "node18"
              },
              "serverless-iam-roles-per-function": {
                "defaultInherit": true
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "us-east-1",
              "httpApi": {
                "id": "feg279u8wc"
              },
              "vpc": {
                "securityGroupIds": [
                  "sg-086c34a1e163316df"
                ],
                "subnetIds": [
                  "subnet-06f144f22653ca420"
                ]
              },
              "environment": {
                "ENV": "dev",
                "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                "REDIS_PORT": "6379",
                "TABLE_NAME": "Serverless"
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ChangePasswordFunctionLogGroup": "<REDACTED>",
                  "LoginFunctionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/users-dev-loginFunction"
                    }
                  },
                  "NoTokenAccessFunctionLogGroup": "<REDACTED>",
                  "RegisterFunctionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/users-dev-registerFunction"
                    }
                  },
                  "VerifyTokenFunctionLogGroup": "<REDACTED>",
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "users",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "ChangePasswordFunctionLambdaFunction": "<REDACTED>",
                  "LoginFunctionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                        "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                      },
                      "Handler": "src/handlers/login.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "users-dev-loginFunction",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "ENV": "dev",
                          "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                          "REDIS_PORT": "6379",
                          "TABLE_NAME": "Serverless",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "LoginFunctionIamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-086c34a1e163316df"
                        ],
                        "SubnetIds": [
                          "subnet-06f144f22653ca420"
                        ]
                      }
                    },
                    "DependsOn": [
                      "LoginFunctionIamRoleLambdaExecution",
                      "LoginFunctionLogGroup"
                    ]
                  },
                  "NoTokenAccessFunctionLambdaFunction": "<REDACTED>",
                  "RegisterFunctionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                        "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                      },
                      "Handler": "src/handlers/register.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "users-dev-registerFunction",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "ENV": "dev",
                          "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                          "REDIS_PORT": "6379",
                          "TABLE_NAME": "Serverless",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "RegisterFunctionIamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-086c34a1e163316df"
                        ],
                        "SubnetIds": [
                          "subnet-06f144f22653ca420"
                        ]
                      }
                    },
                    "DependsOn": [
                      "RegisterFunctionIamRoleLambdaExecution",
                      "RegisterFunctionLogGroup"
                    ]
                  },
                  "VerifyTokenFunctionLambdaFunction": "<REDACTED>",
                  "ChangePasswordFunctionLambdaVersion1OnpMpMvVCm0KXw6FSChDIdF12uDd9vkr1beX2dbdk": "<REDACTED>",
                  "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginFunctionLambdaFunction"
                      },
                      "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
                    }
                  },
                  "NoTokenAccessFunctionLambdaVersionjlUWVcRwsXMtaGElihEiWpHbInKKaiJGWvudB21RzI": "<REDACTED>",
                  "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RegisterFunctionLambdaFunction"
                      },
                      "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
                    }
                  },
                  "VerifyTokenFunctionLambdaVersionkzIyO9PBK70UpQvZrrYMXjc7bpCEmMrcXjyEDgvUY0": "<REDACTED>",
                  "ChangePasswordFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationChangePasswordFunction": "<REDACTED>",
                  "HttpApiRoutePatchUsersChangepassword": "<REDACTED>",
                  "LoginFunctionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            "feg279u8wc",
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationLoginFunction": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "LoginFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostUsersLogin": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/login",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationLoginFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationLoginFunction"
                  },
                  "NoTokenAccessFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationNoTokenAccessFunction": "<REDACTED>",
                  "HttpApiRoutePostUsersNotokenaccess": "<REDACTED>",
                  "RegisterFunctionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RegisterFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            "feg279u8wc",
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationRegisterFunction": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "RegisterFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostUsersRegister": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/register",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationRegisterFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationRegisterFunction"
                  },
                  "VerifyTokenFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationVerifyTokenFunction": "<REDACTED>",
                  "HttpApiRoutePostUsersVerify": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/verify",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationVerifyTokenFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationVerifyTokenFunction"
                  },
                  "ChangePasswordFunctionIamRoleLambdaExecution": "<REDACTED>",
                  "LoginFunctionIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-loginFunction:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                                "Action": [
                                  "dynamodb:GetItem"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "loginFunctionRole",
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "RegisterFunctionIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-registerFunction:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                                "Action": [
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "registerFunctionRole",
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                    "Export": {
                      "Name": "sls-users-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ChangePasswordFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
                  "LoginFunctionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
                    },
                    "Export": {
                      "Name": "sls-users-dev-LoginFunctionLambdaFunctionQualifiedArn"
                    }
                  },
                  "NoTokenAccessFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
                  "RegisterFunctionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
                    },
                    "Export": {
                      "Name": "sls-users-dev-RegisterFunctionLambdaFunctionQualifiedArn"
                    }
                  },
                  "VerifyTokenFunctionLambdaFunctionQualifiedArn": "<REDACTED>"
                }
              }
            },
            "functions": {
              "changePasswordFunction": "<REDACTED>",
              "loginFunction": {
                "handler": "src/handlers/login.handler",
                "timeout": 30,
                "iamRoleStatementsName": "loginFunctionRole",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                    "Action": [
                      "dynamodb:GetItem"
                    ]
                  }
                ],
                "events": [
                  {
                    "httpApi": {
                      "path": "/users/login",
                      "method": "POST"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/users/login"
                  }
                ],
                "name": "users-dev-loginFunction",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
              },
              "noTokenAccessFunction": "<REDACTED>",
              "registerFunction": {
                "handler": "src/handlers/register.handler",
                "timeout": 30,
                "iamRoleStatementsName": "registerFunctionRole",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                    "Action": [
                      "dynamodb:GetItem",
                      "dynamodb:PutItem",
                      "dynamodb:UpdateItem"
                    ]
                  }
                ],
                "events": [
                  {
                    "httpApi": {
                      "path": "/users/register",
                      "method": "POST"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/users/register"
                  }
                ],
                "name": "users-dev-registerFunction",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
              },
              "verifyTokenFunction": "<REDACTED>"
            },
            "org": "gfreecs0510"
          },
          "configFileDirPath": "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/users",
          "config": {
            "type": "env"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "composeParams": {
            "SharedElasticCacheClusterAddress": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
            "SharedElasticCacheClusterPort": "6379",
            "SharedDynamoDBTableName": "Serverless",
            "SharedDynamoDBArn": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
            "SharedApiGatewayId": "feg279u8wc",
            "LambdaSecurityGroupId": "sg-086c34a1e163316df",
            "PrivateSubnet1": "subnet-06f144f22653ca420"
          },
          "logger": {
            "namespace": "s:core:resolver:env",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "param": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "users",
            "plugins": [
              "serverless-iam-roles-per-function"
            ],
            "custom": {
              "esbuild": {
                "bundle": true,
                "sourcemap": true,
                "minify": true,
                "target": "node18"
              },
              "serverless-iam-roles-per-function": {
                "defaultInherit": true
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "us-east-1",
              "httpApi": {
                "id": "feg279u8wc"
              },
              "vpc": {
                "securityGroupIds": [
                  "sg-086c34a1e163316df"
                ],
                "subnetIds": [
                  "subnet-06f144f22653ca420"
                ]
              },
              "environment": {
                "ENV": "dev",
                "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                "REDIS_PORT": "6379",
                "TABLE_NAME": "Serverless"
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ChangePasswordFunctionLogGroup": "<REDACTED>",
                  "LoginFunctionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/users-dev-loginFunction"
                    }
                  },
                  "NoTokenAccessFunctionLogGroup": "<REDACTED>",
                  "RegisterFunctionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/users-dev-registerFunction"
                    }
                  },
                  "VerifyTokenFunctionLogGroup": "<REDACTED>",
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "users",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "ChangePasswordFunctionLambdaFunction": "<REDACTED>",
                  "LoginFunctionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                        "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                      },
                      "Handler": "src/handlers/login.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "users-dev-loginFunction",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "ENV": "dev",
                          "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                          "REDIS_PORT": "6379",
                          "TABLE_NAME": "Serverless",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "LoginFunctionIamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-086c34a1e163316df"
                        ],
                        "SubnetIds": [
                          "subnet-06f144f22653ca420"
                        ]
                      }
                    },
                    "DependsOn": [
                      "LoginFunctionIamRoleLambdaExecution",
                      "LoginFunctionLogGroup"
                    ]
                  },
                  "NoTokenAccessFunctionLambdaFunction": "<REDACTED>",
                  "RegisterFunctionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                        "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                      },
                      "Handler": "src/handlers/register.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "users-dev-registerFunction",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "ENV": "dev",
                          "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                          "REDIS_PORT": "6379",
                          "TABLE_NAME": "Serverless",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "RegisterFunctionIamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-086c34a1e163316df"
                        ],
                        "SubnetIds": [
                          "subnet-06f144f22653ca420"
                        ]
                      }
                    },
                    "DependsOn": [
                      "RegisterFunctionIamRoleLambdaExecution",
                      "RegisterFunctionLogGroup"
                    ]
                  },
                  "VerifyTokenFunctionLambdaFunction": "<REDACTED>",
                  "ChangePasswordFunctionLambdaVersion1OnpMpMvVCm0KXw6FSChDIdF12uDd9vkr1beX2dbdk": "<REDACTED>",
                  "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginFunctionLambdaFunction"
                      },
                      "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
                    }
                  },
                  "NoTokenAccessFunctionLambdaVersionjlUWVcRwsXMtaGElihEiWpHbInKKaiJGWvudB21RzI": "<REDACTED>",
                  "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RegisterFunctionLambdaFunction"
                      },
                      "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
                    }
                  },
                  "VerifyTokenFunctionLambdaVersionkzIyO9PBK70UpQvZrrYMXjc7bpCEmMrcXjyEDgvUY0": "<REDACTED>",
                  "ChangePasswordFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationChangePasswordFunction": "<REDACTED>",
                  "HttpApiRoutePatchUsersChangepassword": "<REDACTED>",
                  "LoginFunctionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            "feg279u8wc",
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationLoginFunction": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "LoginFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostUsersLogin": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/login",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationLoginFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationLoginFunction"
                  },
                  "NoTokenAccessFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationNoTokenAccessFunction": "<REDACTED>",
                  "HttpApiRoutePostUsersNotokenaccess": "<REDACTED>",
                  "RegisterFunctionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RegisterFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            "feg279u8wc",
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationRegisterFunction": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "RegisterFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostUsersRegister": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/register",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationRegisterFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationRegisterFunction"
                  },
                  "VerifyTokenFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationVerifyTokenFunction": "<REDACTED>",
                  "HttpApiRoutePostUsersVerify": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/verify",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationVerifyTokenFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationVerifyTokenFunction"
                  },
                  "ChangePasswordFunctionIamRoleLambdaExecution": "<REDACTED>",
                  "LoginFunctionIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-loginFunction:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                                "Action": [
                                  "dynamodb:GetItem"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "loginFunctionRole",
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "RegisterFunctionIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-registerFunction:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                                "Action": [
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "registerFunctionRole",
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                    "Export": {
                      "Name": "sls-users-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ChangePasswordFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
                  "LoginFunctionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
                    },
                    "Export": {
                      "Name": "sls-users-dev-LoginFunctionLambdaFunctionQualifiedArn"
                    }
                  },
                  "NoTokenAccessFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
                  "RegisterFunctionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
                    },
                    "Export": {
                      "Name": "sls-users-dev-RegisterFunctionLambdaFunctionQualifiedArn"
                    }
                  },
                  "VerifyTokenFunctionLambdaFunctionQualifiedArn": "<REDACTED>"
                }
              }
            },
            "functions": {
              "changePasswordFunction": "<REDACTED>",
              "loginFunction": {
                "handler": "src/handlers/login.handler",
                "timeout": 30,
                "iamRoleStatementsName": "loginFunctionRole",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                    "Action": [
                      "dynamodb:GetItem"
                    ]
                  }
                ],
                "events": [
                  {
                    "httpApi": {
                      "path": "/users/login",
                      "method": "POST"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/users/login"
                  }
                ],
                "name": "users-dev-loginFunction",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
              },
              "noTokenAccessFunction": "<REDACTED>",
              "registerFunction": {
                "handler": "src/handlers/register.handler",
                "timeout": 30,
                "iamRoleStatementsName": "registerFunctionRole",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                    "Action": [
                      "dynamodb:GetItem",
                      "dynamodb:PutItem",
                      "dynamodb:UpdateItem"
                    ]
                  }
                ],
                "events": [
                  {
                    "httpApi": {
                      "path": "/users/register",
                      "method": "POST"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/users/register"
                  }
                ],
                "name": "users-dev-registerFunction",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
              },
              "verifyTokenFunction": "<REDACTED>"
            },
            "org": "gfreecs0510"
          },
          "configFileDirPath": "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/users",
          "config": {
            "type": "param"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "dashboard": null,
          "composeParams": {
            "SharedElasticCacheClusterAddress": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
            "SharedElasticCacheClusterPort": "6379",
            "SharedDynamoDBTableName": "Serverless",
            "SharedDynamoDBArn": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
            "SharedApiGatewayId": "feg279u8wc",
            "LambdaSecurityGroupId": "sg-086c34a1e163316df",
            "PrivateSubnet1": "subnet-06f144f22653ca420"
          },
          "logger": {
            "namespace": "s:core:resolver:param",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "users",
            "plugins": [
              "serverless-iam-roles-per-function"
            ],
            "custom": {
              "esbuild": {
                "bundle": true,
                "sourcemap": true,
                "minify": true,
                "target": "node18"
              },
              "serverless-iam-roles-per-function": {
                "defaultInherit": true
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "us-east-1",
              "httpApi": {
                "id": "feg279u8wc"
              },
              "vpc": {
                "securityGroupIds": [
                  "sg-086c34a1e163316df"
                ],
                "subnetIds": [
                  "subnet-06f144f22653ca420"
                ]
              },
              "environment": {
                "ENV": "dev",
                "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                "REDIS_PORT": "6379",
                "TABLE_NAME": "Serverless"
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ChangePasswordFunctionLogGroup": "<REDACTED>",
                  "LoginFunctionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/users-dev-loginFunction"
                    }
                  },
                  "NoTokenAccessFunctionLogGroup": "<REDACTED>",
                  "RegisterFunctionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/users-dev-registerFunction"
                    }
                  },
                  "VerifyTokenFunctionLogGroup": "<REDACTED>",
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "users",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "ChangePasswordFunctionLambdaFunction": "<REDACTED>",
                  "LoginFunctionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                        "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                      },
                      "Handler": "src/handlers/login.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "users-dev-loginFunction",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "ENV": "dev",
                          "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                          "REDIS_PORT": "6379",
                          "TABLE_NAME": "Serverless",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "LoginFunctionIamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-086c34a1e163316df"
                        ],
                        "SubnetIds": [
                          "subnet-06f144f22653ca420"
                        ]
                      }
                    },
                    "DependsOn": [
                      "LoginFunctionIamRoleLambdaExecution",
                      "LoginFunctionLogGroup"
                    ]
                  },
                  "NoTokenAccessFunctionLambdaFunction": "<REDACTED>",
                  "RegisterFunctionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                        "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                      },
                      "Handler": "src/handlers/register.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "users-dev-registerFunction",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "ENV": "dev",
                          "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                          "REDIS_PORT": "6379",
                          "TABLE_NAME": "Serverless",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "RegisterFunctionIamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-086c34a1e163316df"
                        ],
                        "SubnetIds": [
                          "subnet-06f144f22653ca420"
                        ]
                      }
                    },
                    "DependsOn": [
                      "RegisterFunctionIamRoleLambdaExecution",
                      "RegisterFunctionLogGroup"
                    ]
                  },
                  "VerifyTokenFunctionLambdaFunction": "<REDACTED>",
                  "ChangePasswordFunctionLambdaVersion1OnpMpMvVCm0KXw6FSChDIdF12uDd9vkr1beX2dbdk": "<REDACTED>",
                  "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginFunctionLambdaFunction"
                      },
                      "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
                    }
                  },
                  "NoTokenAccessFunctionLambdaVersionjlUWVcRwsXMtaGElihEiWpHbInKKaiJGWvudB21RzI": "<REDACTED>",
                  "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RegisterFunctionLambdaFunction"
                      },
                      "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
                    }
                  },
                  "VerifyTokenFunctionLambdaVersionkzIyO9PBK70UpQvZrrYMXjc7bpCEmMrcXjyEDgvUY0": "<REDACTED>",
                  "ChangePasswordFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationChangePasswordFunction": "<REDACTED>",
                  "HttpApiRoutePatchUsersChangepassword": "<REDACTED>",
                  "LoginFunctionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            "feg279u8wc",
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationLoginFunction": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "LoginFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostUsersLogin": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/login",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationLoginFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationLoginFunction"
                  },
                  "NoTokenAccessFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationNoTokenAccessFunction": "<REDACTED>",
                  "HttpApiRoutePostUsersNotokenaccess": "<REDACTED>",
                  "RegisterFunctionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RegisterFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            "feg279u8wc",
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationRegisterFunction": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "RegisterFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostUsersRegister": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/register",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationRegisterFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationRegisterFunction"
                  },
                  "VerifyTokenFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationVerifyTokenFunction": "<REDACTED>",
                  "HttpApiRoutePostUsersVerify": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/verify",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationVerifyTokenFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationVerifyTokenFunction"
                  },
                  "ChangePasswordFunctionIamRoleLambdaExecution": "<REDACTED>",
                  "LoginFunctionIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-loginFunction:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                                "Action": [
                                  "dynamodb:GetItem"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "loginFunctionRole",
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "RegisterFunctionIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-registerFunction:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                                "Action": [
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "registerFunctionRole",
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                    "Export": {
                      "Name": "sls-users-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ChangePasswordFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
                  "LoginFunctionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
                    },
                    "Export": {
                      "Name": "sls-users-dev-LoginFunctionLambdaFunctionQualifiedArn"
                    }
                  },
                  "NoTokenAccessFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
                  "RegisterFunctionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
                    },
                    "Export": {
                      "Name": "sls-users-dev-RegisterFunctionLambdaFunctionQualifiedArn"
                    }
                  },
                  "VerifyTokenFunctionLambdaFunctionQualifiedArn": "<REDACTED>"
                }
              }
            },
            "functions": {
              "changePasswordFunction": "<REDACTED>",
              "loginFunction": {
                "handler": "src/handlers/login.handler",
                "timeout": 30,
                "iamRoleStatementsName": "loginFunctionRole",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                    "Action": [
                      "dynamodb:GetItem"
                    ]
                  }
                ],
                "events": [
                  {
                    "httpApi": {
                      "path": "/users/login",
                      "method": "POST"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/users/login"
                  }
                ],
                "name": "users-dev-loginFunction",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
              },
              "noTokenAccessFunction": "<REDACTED>",
              "registerFunction": {
                "handler": "src/handlers/register.handler",
                "timeout": 30,
                "iamRoleStatementsName": "registerFunctionRole",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                    "Action": [
                      "dynamodb:GetItem",
                      "dynamodb:PutItem",
                      "dynamodb:UpdateItem"
                    ]
                  }
                ],
                "events": [
                  {
                    "httpApi": {
                      "path": "/users/register",
                      "method": "POST"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/users/register"
                  }
                ],
                "name": "users-dev-registerFunction",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
              },
              "verifyTokenFunction": "<REDACTED>"
            },
            "org": "gfreecs0510"
          },
          "configFileDirPath": "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/users",
          "config": {
            "type": "file"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "dashboard": null,
          "composeParams": {
            "SharedElasticCacheClusterAddress": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
            "SharedElasticCacheClusterPort": "6379",
            "SharedDynamoDBTableName": "Serverless",
            "SharedDynamoDBArn": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
            "SharedApiGatewayId": "feg279u8wc",
            "LambdaSecurityGroupId": "sg-086c34a1e163316df",
            "PrivateSubnet1": "subnet-06f144f22653ca420"
          },
          "logger": {
            "namespace": "s:core:resolver:file",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "users",
            "plugins": [
              "serverless-iam-roles-per-function"
            ],
            "custom": {
              "esbuild": {
                "bundle": true,
                "sourcemap": true,
                "minify": true,
                "target": "node18"
              },
              "serverless-iam-roles-per-function": {
                "defaultInherit": true
              }
            },
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "us-east-1",
              "httpApi": {
                "id": "feg279u8wc"
              },
              "vpc": {
                "securityGroupIds": [
                  "sg-086c34a1e163316df"
                ],
                "subnetIds": [
                  "subnet-06f144f22653ca420"
                ]
              },
              "environment": {
                "ENV": "dev",
                "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                "REDIS_PORT": "6379",
                "TABLE_NAME": "Serverless"
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ChangePasswordFunctionLogGroup": "<REDACTED>",
                  "LoginFunctionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/users-dev-loginFunction"
                    }
                  },
                  "NoTokenAccessFunctionLogGroup": "<REDACTED>",
                  "RegisterFunctionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/users-dev-registerFunction"
                    }
                  },
                  "VerifyTokenFunctionLogGroup": "<REDACTED>",
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "users",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "ChangePasswordFunctionLambdaFunction": "<REDACTED>",
                  "LoginFunctionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                        "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                      },
                      "Handler": "src/handlers/login.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "users-dev-loginFunction",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "ENV": "dev",
                          "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                          "REDIS_PORT": "6379",
                          "TABLE_NAME": "Serverless",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "LoginFunctionIamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-086c34a1e163316df"
                        ],
                        "SubnetIds": [
                          "subnet-06f144f22653ca420"
                        ]
                      }
                    },
                    "DependsOn": [
                      "LoginFunctionIamRoleLambdaExecution",
                      "LoginFunctionLogGroup"
                    ]
                  },
                  "NoTokenAccessFunctionLambdaFunction": "<REDACTED>",
                  "RegisterFunctionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                        "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                      },
                      "Handler": "src/handlers/register.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "users-dev-registerFunction",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "ENV": "dev",
                          "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                          "REDIS_PORT": "6379",
                          "TABLE_NAME": "Serverless",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "RegisterFunctionIamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-086c34a1e163316df"
                        ],
                        "SubnetIds": [
                          "subnet-06f144f22653ca420"
                        ]
                      }
                    },
                    "DependsOn": [
                      "RegisterFunctionIamRoleLambdaExecution",
                      "RegisterFunctionLogGroup"
                    ]
                  },
                  "VerifyTokenFunctionLambdaFunction": "<REDACTED>",
                  "ChangePasswordFunctionLambdaVersion1OnpMpMvVCm0KXw6FSChDIdF12uDd9vkr1beX2dbdk": "<REDACTED>",
                  "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginFunctionLambdaFunction"
                      },
                      "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
                    }
                  },
                  "NoTokenAccessFunctionLambdaVersionjlUWVcRwsXMtaGElihEiWpHbInKKaiJGWvudB21RzI": "<REDACTED>",
                  "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RegisterFunctionLambdaFunction"
                      },
                      "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
                    }
                  },
                  "VerifyTokenFunctionLambdaVersionkzIyO9PBK70UpQvZrrYMXjc7bpCEmMrcXjyEDgvUY0": "<REDACTED>",
                  "ChangePasswordFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationChangePasswordFunction": "<REDACTED>",
                  "HttpApiRoutePatchUsersChangepassword": "<REDACTED>",
                  "LoginFunctionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            "feg279u8wc",
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationLoginFunction": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "LoginFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostUsersLogin": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/login",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationLoginFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationLoginFunction"
                  },
                  "NoTokenAccessFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationNoTokenAccessFunction": "<REDACTED>",
                  "HttpApiRoutePostUsersNotokenaccess": "<REDACTED>",
                  "RegisterFunctionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RegisterFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            "feg279u8wc",
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationRegisterFunction": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "RegisterFunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostUsersRegister": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/register",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationRegisterFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationRegisterFunction"
                  },
                  "VerifyTokenFunctionLambdaPermissionHttpApi": "<REDACTED>",
                  "HttpApiIntegrationVerifyTokenFunction": "<REDACTED>",
                  "HttpApiRoutePostUsersVerify": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": "feg279u8wc",
                      "RouteKey": "POST /users/verify",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationVerifyTokenFunction"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationVerifyTokenFunction"
                  },
                  "ChangePasswordFunctionIamRoleLambdaExecution": "<REDACTED>",
                  "LoginFunctionIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-loginFunction:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                                "Action": [
                                  "dynamodb:GetItem"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "loginFunctionRole",
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "RegisterFunctionIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "users",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-registerFunction:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                                "Action": [
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": "registerFunctionRole",
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                    "Export": {
                      "Name": "sls-users-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ChangePasswordFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
                  "LoginFunctionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
                    },
                    "Export": {
                      "Name": "sls-users-dev-LoginFunctionLambdaFunctionQualifiedArn"
                    }
                  },
                  "NoTokenAccessFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
                  "RegisterFunctionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
                    },
                    "Export": {
                      "Name": "sls-users-dev-RegisterFunctionLambdaFunctionQualifiedArn"
                    }
                  },
                  "VerifyTokenFunctionLambdaFunctionQualifiedArn": "<REDACTED>"
                }
              }
            },
            "functions": {
              "changePasswordFunction": "<REDACTED>",
              "loginFunction": {
                "handler": "src/handlers/login.handler",
                "timeout": 30,
                "iamRoleStatementsName": "loginFunctionRole",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                    "Action": [
                      "dynamodb:GetItem"
                    ]
                  }
                ],
                "events": [
                  {
                    "httpApi": {
                      "path": "/users/login",
                      "method": "POST"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/users/login"
                  }
                ],
                "name": "users-dev-loginFunction",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
              },
              "noTokenAccessFunction": "<REDACTED>",
              "registerFunction": {
                "handler": "src/handlers/register.handler",
                "timeout": 30,
                "iamRoleStatementsName": "registerFunctionRole",
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                    "Action": [
                      "dynamodb:GetItem",
                      "dynamodb:PutItem",
                      "dynamodb:UpdateItem"
                    ]
                  }
                ],
                "events": [
                  {
                    "httpApi": {
                      "path": "/users/register",
                      "method": "POST"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/users/register"
                  }
                ],
                "name": "users-dev-registerFunction",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
              },
              "verifyTokenFunction": "<REDACTED>"
            },
            "org": "gfreecs0510"
          },
          "configFileDirPath": "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/users",
          "config": {
            "type": "sls"
          },
          "options": {
            "verbose": true
          },
          "stage": "dev",
          "dashboard": null,
          "composeParams": {
            "SharedElasticCacheClusterAddress": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
            "SharedElasticCacheClusterPort": "6379",
            "SharedDynamoDBTableName": "Serverless",
            "SharedDynamoDBArn": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
            "SharedApiGatewayId": "feg279u8wc",
            "LambdaSecurityGroupId": "sg-086c34a1e163316df",
            "PrivateSubnet1": "subnet-06f144f22653ca420"
          },
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": "users",
    "composeServiceParams": {
      "SharedElasticCacheClusterAddress": "sharedInfra.SharedElasticCacheClusterAddress",
      "SharedElasticCacheClusterPort": "sharedInfra.SharedElasticCacheClusterPort",
      "SharedDynamoDBTableName": "sharedInfra.SharedDynamoDBTableName",
      "SharedDynamoDBArn": "sharedInfra.SharedDynamoDBArn",
      "SharedApiGatewayId": "sharedInfra.SharedApiGatewayId",
      "LambdaSecurityGroupId": "sharedInfra.LambdaSecurityGroupId",
      "PrivateSubnet1": "sharedInfra.PrivateSubnet1"
    },
    "servicePath": "/Users/allara/Desktop/Codes/serverless-portfolio/monorepo/services/users",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "users",
      "plugins": [
        "serverless-iam-roles-per-function"
      ],
      "custom": {
        "esbuild": {
          "bundle": true,
          "sourcemap": true,
          "minify": true,
          "target": "node18"
        },
        "serverless-iam-roles-per-function": {
          "defaultInherit": true
        }
      },
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "httpApi": {
          "id": "feg279u8wc"
        },
        "vpc": {
          "securityGroupIds": [
            "sg-086c34a1e163316df"
          ],
          "subnetIds": [
            "subnet-06f144f22653ca420"
          ]
        },
        "environment": {
          "ENV": "dev",
          "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
          "REDIS_PORT": "6379",
          "TABLE_NAME": "Serverless"
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ChangePasswordFunctionLogGroup": "<REDACTED>",
            "LoginFunctionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/users-dev-loginFunction"
              }
            },
            "NoTokenAccessFunctionLogGroup": "<REDACTED>",
            "RegisterFunctionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/users-dev-registerFunction"
              }
            },
            "VerifyTokenFunctionLogGroup": "<REDACTED>",
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "users",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "users",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                },
                "ManagedPolicyArns": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                      ]
                    ]
                  }
                ]
              }
            },
            "ChangePasswordFunctionLambdaFunction": "<REDACTED>",
            "LoginFunctionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                  "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                },
                "Handler": "src/handlers/login.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "users-dev-loginFunction",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "ENV": "dev",
                    "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                    "REDIS_PORT": "6379",
                    "TABLE_NAME": "Serverless",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "LoginFunctionIamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-086c34a1e163316df"
                  ],
                  "SubnetIds": [
                    "subnet-06f144f22653ca420"
                  ]
                }
              },
              "DependsOn": [
                "LoginFunctionIamRoleLambdaExecution",
                "LoginFunctionLogGroup"
              ]
            },
            "NoTokenAccessFunctionLambdaFunction": "<REDACTED>",
            "RegisterFunctionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-a0eef045-f091",
                  "S3Key": "serverless/users/dev/1732158599649-2024-11-21T03:09:59.649Z/users.zip"
                },
                "Handler": "src/handlers/register.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "users-dev-registerFunction",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "ENV": "dev",
                    "REDIS_HOST": "shared-redis-cluster.k4ya7e.0001.use1.cache.amazonaws.com",
                    "REDIS_PORT": "6379",
                    "TABLE_NAME": "Serverless",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "RegisterFunctionIamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-086c34a1e163316df"
                  ],
                  "SubnetIds": [
                    "subnet-06f144f22653ca420"
                  ]
                }
              },
              "DependsOn": [
                "RegisterFunctionIamRoleLambdaExecution",
                "RegisterFunctionLogGroup"
              ]
            },
            "VerifyTokenFunctionLambdaFunction": "<REDACTED>",
            "ChangePasswordFunctionLambdaVersion1OnpMpMvVCm0KXw6FSChDIdF12uDd9vkr1beX2dbdk": "<REDACTED>",
            "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginFunctionLambdaFunction"
                },
                "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
              }
            },
            "NoTokenAccessFunctionLambdaVersionjlUWVcRwsXMtaGElihEiWpHbInKKaiJGWvudB21RzI": "<REDACTED>",
            "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "RegisterFunctionLambdaFunction"
                },
                "CodeSha256": "AxGSLbgVI1vX3aD5bjcihvS7+knHTdYZAJzb377Xxus="
              }
            },
            "VerifyTokenFunctionLambdaVersionkzIyO9PBK70UpQvZrrYMXjc7bpCEmMrcXjyEDgvUY0": "<REDACTED>",
            "ChangePasswordFunctionLambdaPermissionHttpApi": "<REDACTED>",
            "HttpApiIntegrationChangePasswordFunction": "<REDACTED>",
            "HttpApiRoutePatchUsersChangepassword": "<REDACTED>",
            "LoginFunctionLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginFunctionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      "feg279u8wc",
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationLoginFunction": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": "feg279u8wc",
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "LoginFunctionLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostUsersLogin": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": "feg279u8wc",
                "RouteKey": "POST /users/login",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationLoginFunction"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationLoginFunction"
            },
            "NoTokenAccessFunctionLambdaPermissionHttpApi": "<REDACTED>",
            "HttpApiIntegrationNoTokenAccessFunction": "<REDACTED>",
            "HttpApiRoutePostUsersNotokenaccess": "<REDACTED>",
            "RegisterFunctionLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "RegisterFunctionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      "feg279u8wc",
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationRegisterFunction": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": "feg279u8wc",
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "RegisterFunctionLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostUsersRegister": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": "feg279u8wc",
                "RouteKey": "POST /users/register",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationRegisterFunction"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationRegisterFunction"
            },
            "VerifyTokenFunctionLambdaPermissionHttpApi": "<REDACTED>",
            "HttpApiIntegrationVerifyTokenFunction": "<REDACTED>",
            "HttpApiRoutePostUsersVerify": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": "feg279u8wc",
                "RouteKey": "POST /users/verify",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationVerifyTokenFunction"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationVerifyTokenFunction"
            },
            "ChangePasswordFunctionIamRoleLambdaExecution": "<REDACTED>",
            "LoginFunctionIamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "users",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-loginFunction:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                          "Action": [
                            "dynamodb:GetItem"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": "loginFunctionRole",
                "ManagedPolicyArns": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                      ]
                    ]
                  }
                ]
              }
            },
            "RegisterFunctionIamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "users",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/users-dev-registerFunction:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
                          "Action": [
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": "registerFunctionRole",
                "ManagedPolicyArns": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                      ]
                    ]
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-a0eef045-f091",
              "Export": {
                "Name": "sls-users-dev-ServerlessDeploymentBucketName"
              }
            },
            "ChangePasswordFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
            "LoginFunctionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
              },
              "Export": {
                "Name": "sls-users-dev-LoginFunctionLambdaFunctionQualifiedArn"
              }
            },
            "NoTokenAccessFunctionLambdaFunctionQualifiedArn": "<REDACTED>",
            "RegisterFunctionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
              },
              "Export": {
                "Name": "sls-users-dev-RegisterFunctionLambdaFunctionQualifiedArn"
              }
            },
            "VerifyTokenFunctionLambdaFunctionQualifiedArn": "<REDACTED>"
          }
        }
      },
      "functions": {
        "changePasswordFunction": "<REDACTED>",
        "loginFunction": {
          "handler": "src/handlers/login.handler",
          "timeout": 30,
          "iamRoleStatementsName": "loginFunctionRole",
          "iamRoleStatements": [
            {
              "Effect": "Allow",
              "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
              "Action": [
                "dynamodb:GetItem"
              ]
            }
          ],
          "events": [
            {
              "httpApi": {
                "path": "/users/login",
                "method": "POST"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/users/login"
            }
          ],
          "name": "users-dev-loginFunction",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "LoginFunctionLambdaVersionOmhTEIXP5k0KYaB6jUCs1hWYkMv3e52t0K7rrdhhTQ"
        },
        "noTokenAccessFunction": "<REDACTED>",
        "registerFunction": {
          "handler": "src/handlers/register.handler",
          "timeout": 30,
          "iamRoleStatementsName": "registerFunctionRole",
          "iamRoleStatements": [
            {
              "Effect": "Allow",
              "Resource": "arn:aws:dynamodb:us-east-1:440744220639:table/Serverless",
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem"
              ]
            }
          ],
          "events": [
            {
              "httpApi": {
                "path": "/users/register",
                "method": "POST"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/users/register"
            }
          ],
          "name": "users-dev-registerFunction",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "RegisterFunctionLambdaVersionZMCRRpA1mzfQjEVJPvc1yNrkPV7fRmAC5vdTqWgjf8"
        },
        "verifyTokenFunction": "<REDACTED>"
      },
      "org": "gfreecs0510"
    },
    "serviceRawFile": "service: users\n\nplugins:\n  - serverless-iam-roles-per-function\n\ncustom:\n  esbuild:\n    bundle: true\n    sourcemap: true\n    minify: true\n    target: 'node18'\n  serverless-iam-roles-per-function:\n    defaultInherit: true\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: ${env:AWS_REGION, \"us-east-1\"}\n  httpApi:\n    id: ${param:SharedApiGatewayId}\n  vpc:\n    securityGroupIds:\n      - ${param:LambdaSecurityGroupId}\n    subnetIds:\n      - ${param:PrivateSubnet1}\n  environment:\n    ENV: ${env:ENV}\n    REDIS_HOST: ${param:SharedElasticCacheClusterAddress}\n    REDIS_PORT: ${param:SharedElasticCacheClusterPort}\n    TABLE_NAME: ${param:SharedDynamoDBTableName}\n\nfunctions:\n  - ${file(./serverless/changePassword.yml)}\n  - ${file(./serverless/login.yml)}\n  - ${file(./serverless/noTokenAccess.yml)}\n  - ${file(./serverless/register.yml)}\n  - ${file(./serverless/verifyToken.yml)}\n",
    "command": [
      "deploy"
    ],
    "options": {
      "verbose": true
    },
    "error": null,
    "params": {},
    "machineId": "bb12135dd90b8dad2a0f7176b68baeb3",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "ee424e0e-6208-402b-ba5f-a9abe51422a3",
    "orgName": "gfreecs0510",
    "userId": "GRb8YTcYbHkklmCYMt",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "gfreecs0510",
    "subscription": null,
    "userEmail": "gfreecs0510@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "440744220639",
    "projectType": "traditional",
    "versionSf": "4.4.11",
    "serviceProviderAwsCfStackName": "users-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:440744220639:stack/users-dev/16dda1a0-a69b-11ef-9fa3-0e234fb0a2f5",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:440744220639:stack/users-dev/16dda1a0-a69b-11ef-9fa3-0e234fb0a2f5",
    "serviceProviderAwsCfStackCreated": "2024-11-19T17:24:10.652Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-21T03:10:11.822Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ChangePasswordFunctionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:440744220639:function:users-dev-changePasswordFunction:24",
        "Description": "Current Lambda function version",
        "ExportName": "sls-users-dev-ChangePasswordFunctionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "VerifyTokenFunctionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:440744220639:function:users-dev-verifyTokenFunction:24",
        "Description": "Current Lambda function version",
        "ExportName": "sls-users-dev-VerifyTokenFunctionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginFunctionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:440744220639:function:users-dev-loginFunction:24",
        "Description": "Current Lambda function version",
        "ExportName": "sls-users-dev-LoginFunctionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "RegisterFunctionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:440744220639:function:users-dev-registerFunction:24",
        "Description": "Current Lambda function version",
        "ExportName": "sls-users-dev-RegisterFunctionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-a0eef045-f091",
        "ExportName": "sls-users-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "NoTokenAccessFunctionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:440744220639:function:users-dev-noTokenAccessFunction:24",
        "Description": "Current Lambda function version",
        "ExportName": "sls-users-dev-NoTokenAccessFunctionLambdaFunctionQualifiedArn"
      }
    ]
  }
}