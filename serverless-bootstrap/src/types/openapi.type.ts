/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/search': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Search for job listings with filters and aggregations */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': {
            role?: string;
            country?: string;
            location?: string;
            workTypes?: string[];
            preferences?: string[];
            skills?: string[];
            industries?: string[];
            description?: string[];
            minSalary?: number;
            maxSalary?: number;
            minExp?: number;
            maxExp?: number;
            /** @description Number of results to return */
            size?: number;
            /** @description Starting point for pagination */
            from?: number;
          };
        };
      };
      responses: {
        /** @description A JSON object with search results and aggregations */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': {
              /** @description Total number of results */
              total: number;
              /** @description Number of results returned in the response */
              size: number;
              /** @description Starting index of the results */
              from: number;
              result: components['schemas']['SearchResultJobRecord'][];
              filters: components['schemas']['Aggregates'];
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/createUpdateRecordIndex': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** will create or update an existing record */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['CreateUpdateJobRecord'];
        };
      };
      responses: {
        /** @description Successfully updated/created record index */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Job: {
      /** @description Job Role/Title */
      role: string;
      /** @description Name of the company */
      company: string;
      /** @description which city/state/etc the job is located */
      country: string;
      /** @description which country the job is located */
      location: string;
      /** @description Remote, Hybrid or On-site */
      preferences: string[];
      /** @description Full-time, Part-time, Contractual */
      workTypes: string[];
      /** @description Relevant skills needed for the job */
      skills: string[];
      /** @description Industries you will work with */
      industries: string[];
      /** @description paragraph description about the job */
      description: string;
      /** @description minimum salary (in USD, monthly, in thousands) 1 = 1K USD */
      minSalary: number;
      /** @description minimum salary (in USD, monthly, in thousands) 1 = 1K USD */
      maxSalary: number;
      /** @description min years of experience required for the job */
      minExp: number;
      /** @description maximum years of experience required for the job */
      maxExp: number;
    };
    CreateUpdateJobRecord: components['schemas']['Job'];
    SearchResultJobRecord: components['schemas']['CreateUpdateJobRecord'] & {
      /** @description Relevance score of the job listing */
      score: number;
      /** @description ES record Id */
      id: string;
    };
    Aggregates: {
      countriesAndLocations: {
        /** @description Country name */
        key: string;
        /** @description Number of listings for this country */
        doc_count: number;
        locations: {
          /** @description Location name */
          key: string;
          /** @description Number of listings for this location */
          doc_count: number;
        }[];
      }[];
      preferences: {
        /** @description Remote, Hybrid or On-site */
        key: string;
        /** @description Count of listings for this preference */
        doc_count: number;
      }[];
      workTypes: {
        /** @description Work type (e.g., Part-Time) */
        key: string;
        /** @description Count of listings for this work type */
        doc_count: number;
      }[];
      salaries: {
        /** @description Salary range */
        key: string;
        /** @description Lower limit of the salary range */
        from: number;
        /** @description Upper limit of the salary range */
        to: number;
        /** @description Count of listings for this salary range */
        doc_count: number;
      }[];
      workExperiences: {
        /** @description work experience range */
        key: string;
        /** @description Lower limit of the work experience range */
        from: number;
        /** @description Upper limit of the work experience range */
        to: number;
        /** @description Count of listings for this work experience range */
        doc_count: number;
      }[];
      industries: {
        /** @description Industries */
        key: string;
        /** @description Count of listings this industry */
        doc_count: number;
      }[];
      skills: {
        /** @description Skill */
        key: string;
        /** @description Count of listings this Skill */
        doc_count: number;
      }[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
